{"version":3,"sources":["components/Layout.js","App.js","index.js"],"names":["props","Container","rel","href","children","App","state","userInput","list","input","this","setState","newList","id","Math","random","value","slice","push","index","indexOf","splice","Layout","Grid","centered","columns","Column","textAlign","Header","size","Input","type","onChange","e","changeUserInput","target","fluid","style","marginTop","Button","disabled","onClick","addList","primary","Row","Item","Group","divided","map","item","key","deleteList","negative","floated","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kSAGe,WAAAA,GAEb,OACE,kBAACC,EAAA,EAAD,KACA,0BAAMC,IAAI,aAAaC,KAAK,mEAC3BH,EAAMI,WCHUC,E,kDAGjB,WAAYL,GAAO,IAAD,8BAChB,cAAMA,IACDM,MAAQ,CAAEC,UAAW,GAAGC,KAAM,IAFnB,E,4DAMFC,GACdC,KAAKC,SAAS,CAAEJ,UAAWE,M,8BAGrBA,GAEN,IAAMG,EAAU,CACdC,GAAI,EAAGC,KAAKC,SACZC,MAAON,KAAKJ,MAAMC,UAAUU,SAIxBT,EAAI,YAAOE,KAAKJ,MAAME,MAC5BA,EAAKU,KAAKN,GAEVF,KAAKC,SAAS,CAAEH,OAAMD,UAAW,O,iCAGxBE,GAET,IAAMD,EAAI,YAAOE,KAAKJ,MAAME,MAEtBW,EAAQX,EAAKY,QAAQX,IACZ,IAAXU,IACFX,EAAKa,OAAOF,EAAM,GAClBT,KAAKC,SAAS,CAAEH,KAAMA,O,+BAKnB,IAAD,OACN,OACE,kBAACc,EAAD,KAEA,kBAACC,EAAA,EAAD,CAAMC,UAAQ,EAACC,QAAS,GACtB,kBAACF,EAAA,EAAKG,OAAN,CAAaC,UAAU,UACrB,kBAACC,EAAA,EAAD,CAAQC,KAAK,QAAb,gBACA,kBAACC,EAAA,EAAD,CACEC,KAAK,OACLf,MAAON,KAAKJ,MAAMC,UAClByB,SAAW,SAACC,GAAD,OAAO,EAAKC,gBAAgBD,EAAEE,OAAOnB,QAChDoB,OAAK,EACLC,MAAO,CAACC,UAAW,SAEnB,gCACE,kBAACC,EAAA,EAAD,CACEC,UAAW9B,KAAKJ,MAAMC,UACtBkC,QAAS,kBAAM,EAAKC,QAAQ,EAAKpC,MAAMC,YACvCoC,SAAO,GAHT,YAWV,kBAACpB,EAAA,EAAKqB,IAAN,KACE,kBAACrB,EAAA,EAAKG,OAAN,KACE,kBAACmB,EAAA,EAAKC,MAAN,CAAYC,SAAO,GAChBrC,KAAKJ,MAAME,KAAKwC,KAAI,SAAAC,GAAI,OACvB,kBAACJ,EAAA,EAAD,CACEK,IAAKD,EAAKpC,IACToC,EAAKjC,MACJ,kBAACuB,EAAA,EAAD,CACEE,QAAS,kBAAM,EAAKU,WAAWF,IAC/BG,UAAQ,EACRC,QAAQ,SAHV,kB,GAxEiBC,aCEjCC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.981308ed.chunk.js","sourcesContent":["import React  from 'react';\nimport { Container } from 'semantic-ui-react';\n\nexport default props =>{\n\n  return(\n    <Container>\n    <link rel=\"stylesheet\" href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\" />\n    {props.children}\n    </Container>\n\n\n  );\n\n};\n","import React , { Component } from 'react';\nimport { Grid , Button , Input , Item, Header } from 'semantic-ui-react';\nimport Layout from './components/Layout';\n\n\nexport default class App extends Component {\n\n  //create constructor\n    constructor(props){\n      super(props);\n      this.state = { userInput: '',list: [], }\n    }\n\n\n    changeUserInput(input){\n      this.setState({ userInput: input });\n    }\n\n    addList(input){\n      //create a new list for object\n      const newList = {\n        id: 1+ Math.random(),\n        value: this.state.userInput.slice()\n      };\n\n      //pass the object\n      const list = [...this.state.list];\n      list.push(newList);\n      //set the state\n      this.setState({ list, userInput: \"\" });\n    }\n\n    deleteList(input){\n      //initialise the new variable\n      const list = [...this.state.list];\n      //take the index by pass the unique id\n      const index = list.indexOf(input)\n      if (index !== -1){\n        list.splice(index,1);\n        this.setState({ list: list});\n      }\n    }\n\n\n  render(){\n    return(\n      <Layout>\n\n      <Grid centered columns={2}>\n        <Grid.Column textAlign=\"center\"  >\n          <Header size=\"huge\"> To Do List </Header>\n          <Input\n            type=\"text\"\n            value={this.state.userInput}\n            onChange={ (e) => this.changeUserInput(e.target.value)}\n            fluid\n            style={{marginTop: '12px'}}\n            >\n            <input />\n              <Button\n                disabled={!this.state.userInput}\n                onClick={() => this.addList(this.state.userInput)}\n                primary\n                >\n                Create\n              </Button>\n          </Input>\n      </Grid.Column>\n\n\n    <Grid.Row>\n      <Grid.Column>\n        <Item.Group divided >\n          {this.state.list.map(item =>\n            <Item\n              key={item.id}>\n              {item.value}\n                <Button\n                  onClick={() => this.deleteList(item)}\n                  negative\n                  floated=\"right\">\n                  X\n              </Button>\n            </Item>)}\n        </Item.Group>\n      </Grid.Column>\n    </Grid.Row>\n\n</Grid>\n</Layout>\n\n  );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n//serviceWorker.unregister();\n"],"sourceRoot":""}